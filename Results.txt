KNN k=5
331 25 0 8 2 5 13 24 0 4 6 2 12 4 2 1 5 8 0 0 0 0 3 4 0 	->0 
12 269 9 29 7 0 8 3 0 0 3 0 26 4 15 0 27 11 1 0 1 0 6 1 1 	->1 
0 0 456 0 7 14 4 0 0 1 2 23 0 0 1 1 0 0 1 1 1 0 3 0 0 	->2 
3 30 2 313 1 0 0 0 0 0 1 0 0 0 23 3 7 0 1 0 8 1 2 0 1 	->3 
0 19 34 6 238 14 14 0 0 1 9 7 7 0 0 3 0 5 2 0 0 1 2 0 0 	->4 
0 2 1 1 34 262 3 0 0 3 0 0 1 0 0 77 2 0 1 30 0 0 0 0 2 	->5 
8 16 13 7 6 2 268 0 0 0 2 4 3 0 10 0 25 1 3 0 6 3 12 0 0 	->6 
16 21 2 1 0 1 2 284 0 0 4 0 26 8 0 0 0 0 0 0 14 2 19 0 2 	->7 
1 3 12 9 18 15 1 1 577 85 0 8 0 0 0 1 0 1 20 4 0 0 0 6 6 	->8 
0 7 1 11 5 1 1 0 6 359 0 0 0 0 0 0 5 0 18 9 0 0 1 0 1 	->9 
2 5 15 4 16 6 0 2 0 0 275 5 5 1 1 0 0 9 0 0 1 2 19 8 0 	->10 
0 0 3 0 1 0 1 0 0 1 0 485 0 0 0 0 0 0 0 0 0 0 3 0 0 	->11 
27 29 7 7 3 2 1 93 0 0 22 0 199 19 0 15 1 6 0 1 5 0 18 5 0 	->12 
11 21 1 6 4 1 1 39 0 0 17 0 21 277 0 0 3 0 0 0 12 2 20 2 1 	->13 
2 32 24 117 0 0 5 0 0 0 0 0 0 0 235 1 34 0 0 0 9 0 0 0 0 	->14 
5 3 3 25 4 13 0 0 0 0 0 0 1 0 2 391 8 0 0 2 1 3 0 0 6 	->15 
3 15 9 10 3 1 32 0 0 0 0 0 1 0 16 2 329 4 0 0 17 1 6 0 0 	->16 
20 65 24 10 43 7 4 5 0 0 53 4 14 1 2 4 16 160 1 0 2 0 0 6 0 	->17 
1 17 4 27 4 5 13 0 0 19 1 0 2 0 1 0 10 4 332 0 0 0 0 1 3 	->18 
0 0 0 1 2 1 0 0 0 7 0 0 0 0 0 0 0 0 0 450 0 0 0 0 8 	->19 
0 2 1 4 0 1 1 0 0 2 1 1 0 3 4 0 6 0 0 0 377 21 34 0 0 	->20 
2 2 0 7 2 1 3 1 0 3 0 1 0 0 0 0 2 0 0 0 44 393 8 2 11 	->21 
1 4 0 2 1 0 0 6 0 3 7 2 6 19 0 0 3 1 0 0 41 4 373 2 0 	->22 
5 6 0 5 2 3 1 2 1 0 46 2 1 1 0 0 1 2 1 1 0 12 9 352 15 	->23 
4 3 1 0 0 6 0 1 0 2 1 0 3 0 0 7 4 1 1 25 1 32 0 2 359 	->24 
Acuracia: 72.967088183569217%

    ^

SVM
renan@TheHC:~/GitHub/IdentificadorCharacter/Classificadores$ python Classificadores.py train.txt test.txt 5
366 16 0 11 0 3 4 5 0 2 22 0 15 0 1 0 2 5 0 0 0 0 3 3 1 	->0 
17 292 1 19 3 2 15 0 0 0 3 0 17 1 7 0 18 25 3 0 2 0 8 1 0 	->1 
0 0 498 0 1 3 3 0 0 0 1 9 0 0 2 1 0 0 0 0 0 0 0 0 0 	->2 
0 17 0 335 0 1 0 0 0 1 0 0 1 1 21 6 2 0 0 0 9 1 0 1 0 	->3 
0 5 42 1 237 12 27 0 1 0 8 6 1 0 0 1 0 14 2 1 0 0 0 3 0 	->4 
0 1 1 0 9 334 1 0 0 0 1 0 1 0 0 33 2 0 0 32 0 0 0 0 3 	->5 
4 4 6 3 3 3 279 2 0 0 1 2 11 1 7 0 20 0 3 0 13 6 20 0 1 	->6 
8 7 0 2 0 3 1 289 0 0 1 0 43 10 1 0 0 0 0 0 5 1 22 0 9 	->7 
0 0 1 4 8 12 0 0 609 59 1 2 0 0 0 1 0 0 15 6 0 0 0 23 7 	->8 
0 0 0 12 1 3 1 0 8 378 0 0 0 0 0 1 3 0 10 5 0 0 0 1 0 	->9 
3 1 13 0 5 5 0 3 0 0 294 7 8 1 0 0 0 9 0 0 1 2 15 10 0 	->10 
0 0 6 0 1 0 2 0 0 1 1 480 0 0 0 0 0 0 0 0 0 0 5 0 0 	->11 
25 12 1 1 1 1 0 97 0 0 13 0 237 19 0 4 1 5 0 0 2 4 27 1 9 	->12 
11 4 0 0 0 1 1 13 0 0 14 0 44 289 0 0 1 0 0 0 10 3 40 7 1 	->13 
1 11 17 80 1 0 0 0 0 1 0 0 1 0 284 1 49 0 0 0 13 0 0 0 0 	->14 
2 1 1 19 1 12 0 0 0 1 0 0 0 0 1 417 4 0 1 0 0 0 0 0 7 	->15 
0 14 2 14 1 1 23 0 0 0 3 0 0 1 7 2 341 2 2 0 32 0 5 0 0 	->16 
6 27 9 1 17 16 1 2 0 0 48 2 16 1 1 2 18 259 0 0 3 0 1 10 0 	->17 
0 6 1 17 2 5 12 0 2 23 1 1 3 0 0 0 0 0 362 3 0 0 0 2 5 	->18 
2 0 0 0 0 2 0 0 2 2 0 0 0 0 0 1 0 0 0 455 0 0 0 0 5 	->19 
0 0 1 3 0 0 0 2 0 1 0 1 0 1 2 0 2 0 0 0 401 22 20 0 2 	->20 
0 0 0 0 0 1 0 0 0 2 3 0 0 7 0 0 0 1 0 0 30 411 6 5 16 	->21 
1 3 0 1 0 0 0 1 0 3 10 6 12 25 0 0 1 0 0 0 40 4 366 1 1 	->22 
7 1 0 1 2 5 0 0 2 1 26 2 2 3 0 0 1 1 0 0 0 8 3 383 22 	->23 
0 0 0 0 0 2 0 2 0 1 1 0 1 1 0 2 0 0 0 12 0 18 0 8 405 	->24 
Acuracia: 78.494263462021607%


DecisionTree
renan@TheHC:~/GitHub/IdentificadorCharacter/Classificadores$ python Classificadores.py train.txt test.txt 5
293 13 1 12 1 9 6 22 0 1 11 5 16 13 1 5 6 20 4 1 2 0 8 7 0 	->0 
17 222 4 21 8 6 21 6 0 2 3 0 17 3 14 6 30 27 9 0 3 1 7 3 1 	->1 
0 0 459 0 7 3 13 0 0 3 2 13 0 0 2 0 0 5 1 2 4 1 1 1 0 	->2 
6 23 1 283 0 0 3 3 0 4 0 0 3 0 24 9 20 0 0 0 5 2 7 0 1 	->3 
0 11 20 2 205 22 26 1 0 3 8 3 0 2 0 2 8 22 12 0 2 0 3 4 1 	->4 
2 1 3 0 18 318 5 4 2 3 2 0 0 1 0 36 5 2 2 13 0 0 2 0 0 	->5 
6 15 12 4 10 9 233 7 0 1 2 3 12 3 8 0 27 1 4 3 7 2 18 0 2 	->6 
16 6 1 5 0 0 3 259 0 1 5 1 25 33 1 0 0 4 0 0 10 2 27 1 2 	->7 
2 2 5 12 7 13 3 1 568 61 4 19 0 1 7 8 1 3 16 29 0 3 0 8 4 	->8 
1 1 1 10 3 6 3 0 16 318 1 0 2 1 1 0 4 0 34 13 0 0 0 3 5 	->9 
3 2 11 0 10 8 5 7 0 0 268 11 4 4 0 0 0 14 3 0 5 1 10 8 0 	->10 
0 1 20 0 2 0 2 0 0 1 3 457 0 0 0 0 0 0 0 0 0 2 2 1 0 	->11 
15 9 0 5 0 1 2 102 0 4 26 0 167 56 1 5 10 8 1 1 10 2 29 3 2 	->12 
9 10 1 3 2 0 4 28 1 0 11 0 34 252 1 1 5 3 1 0 11 9 48 3 2 	->13 
1 11 23 94 1 0 4 0 0 8 0 0 1 0 255 1 47 0 4 0 9 0 0 0 0 	->14 
3 15 2 13 3 22 5 2 1 1 2 1 2 2 4 356 10 3 2 6 3 2 4 0 2 	->15 
6 27 11 12 3 5 49 2 0 2 3 0 3 3 8 3 273 7 1 0 22 0 10 0 1 	->16 
19 25 20 1 33 12 9 3 2 1 23 4 13 6 2 4 24 216 4 0 7 0 3 2 0 	->17 
0 11 0 3 15 13 10 0 8 24 5 3 0 1 1 3 3 3 316 3 0 0 2 2 9 	->18 
0 2 0 0 0 10 1 0 2 15 0 2 1 1 1 3 0 0 2 418 0 1 2 1 5 	->19 
0 0 1 1 0 0 2 1 0 1 2 1 1 8 5 2 4 1 0 0 361 34 31 1 1 	->20 
2 1 0 0 1 0 0 2 2 2 4 0 2 6 0 1 1 1 0 0 39 349 18 10 41 	->21 
1 2 1 2 1 0 3 8 0 1 9 2 16 23 1 1 6 0 1 1 38 14 342 0 2 	->22 
9 4 1 2 2 3 3 4 3 2 29 5 2 3 0 1 1 8 2 1 2 12 0 329 17 	->23 
1 1 0 1 0 3 0 6 3 1 6 0 2 5 0 4 0 1 0 9 1 47 3 23 335 	->24 
Acuracia: 68.645842056779159%



Fusion(kNN+SVM+DecisionTree) VotoMajoritario
renan@TheHC:~/GitHub/IdentificadorCharacter/Classificadores$ python Classificadores.py train.txt test.txt 5
386 14 0 7 0 2 3 3 0 3 13 1 8 1 2 1 5 5 0 0 0 0 3 1 1 	->0 
30 302 3 13 2 0 7 0 1 0 1 0 14 0 4 0 33 15 2 0 1 0 2 1 2 	->1 
0 1 491 0 1 0 2 0 0 4 1 11 0 0 2 1 0 2 0 1 0 0 0 0 0 	->2 
5 24 0 325 0 0 0 0 0 2 1 0 1 0 19 4 7 1 0 1 4 1 0 0 1 	->3 
0 18 40 3 234 8 21 0 0 1 10 5 1 0 0 1 0 10 4 0 0 0 2 0 0 	->4 
1 1 3 1 15 316 0 0 0 1 0 0 1 0 0 42 5 0 0 27 0 1 0 0 4 	->5 
12 15 9 9 1 2 273 0 0 0 4 5 3 0 5 0 29 1 1 0 8 2 8 0 2 	->6 
15 18 1 3 0 1 1 285 1 0 2 1 29 10 1 0 0 0 0 0 9 2 13 0 10 	->7 
1 2 2 2 9 6 0 0 644 67 2 3 0 0 0 1 0 2 9 6 0 0 0 7 7 	->8 
0 3 0 4 1 1 1 0 13 377 1 0 0 0 0 0 5 0 11 6 0 0 0 0 3 	->9 
6 7 13 0 7 6 0 1 1 0 300 5 4 0 0 0 0 7 0 0 1 1 9 7 0 	->10 
0 0 8 1 0 0 0 0 0 1 2 482 0 0 0 0 0 0 0 0 0 0 0 0 0 	->11 
41 28 2 5 1 1 0 85 0 1 18 0 215 11 0 2 6 8 0 0 6 2 18 1 9 	->12 
19 17 2 4 1 0 0 16 0 0 21 0 32 282 0 0 2 2 1 0 13 1 24 1 1 	->13 
5 16 22 85 1 0 0 0 0 2 0 0 0 0 258 1 60 0 0 0 9 0 0 0 0 	->14 
4 3 1 21 2 6 0 0 0 0 0 0 0 0 2 411 5 2 0 0 0 0 0 1 9 	->15 
3 12 3 12 1 0 11 0 0 0 1 0 0 0 6 3 373 4 0 0 16 0 4 0 0 	->16 
22 45 10 2 17 6 1 2 3 0 34 4 10 1 1 2 25 247 0 0 3 0 0 3 1 	->17 
2 15 2 8 4 3 11 0 4 22 1 0 0 0 0 0 6 4 352 0 0 0 0 0 10 	->18 
2 0 1 0 0 1 0 0 2 1 0 0 0 0 0 0 0 0 0 455 0 0 0 0 7 	->19 
1 0 0 7 0 0 0 0 0 3 1 1 1 1 1 0 5 1 0 0 401 17 17 0 1 	->20 
2 2 0 1 0 0 0 0 0 4 2 0 0 2 0 0 2 0 0 0 34 404 6 0 23 	->21 
1 3 0 1 1 0 0 2 0 5 7 4 10 20 0 0 4 2 0 0 36 3 376 0 0 	->22 
8 4 0 1 0 1 0 0 5 2 32 4 1 1 0 0 2 5 1 0 0 7 2 369 20 	->23 
3 0 0 0 0 0 0 0 0 2 1 0 0 0 0 1 4 0 0 11 1 22 0 3 405 	->24 
Acuracia: 78.284900762080227%
